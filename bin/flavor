#!/bin/bash

# ------------------------------------------------------------------------------------------------------

# This script is used to switch from the Flutter Sound FULL flavor to the Flutter Sound LITE flavor
# (or the opposite)

# If the script is called without parameter, it just analyzes the current flavor and print errors if any.

# The allowed parameters are :
# "bin/flavor FULL"  to switch to the full version
# "bin/flavor LITE"  to switch to the lite version.

# If the script encounters errors before doing the switch
# then it does not modify any files.
# If you want to force the changes, add a second script parameter 'force'

# The "Current Directory" must be the Flutter Sound root directory.
# Note : this script uses the GNU-sed ("brew install gnu-sed" on Macos)

# ------------------------------------------------------------------------------------------------------

# Verify the Current Directory.

if [ ! -f "bin/flavor" ]
then
    	echo "This script must be called from Flutter Sound root directory"
	exit -1
fi

if [ ! -f pubspec.yaml ]
then
	echo "No file ./pubspec.yaml"
	exit -1
fi


# ------------------------------------------------------------------------------------------------------

# Check pubspec.yaml
#-------------------
check_actual_flavor()
{
	RES=0
	if grep '^name: flutter_sound_lite$' pubspec.yaml > /dev/null ; then
		echo "Current flavor is LITE $(tput setaf 2) [OK]$(tput sgr 0)"
		FLAVOR=LITE
		return 0
	elif  grep '^name: flutter_sound$' pubspec.yaml > /dev/null ; then
		echo "Current flavor is FULL $(tput setaf 2) [OK]$(tput sgr 0)"
		FLAVOR=FULL
		return 0
	else
		FLAVOR=""
		echo "Cannot determine your current flavor in file ./pubspec.yaml $(tput setaf 1) [NOK]$(tput sgr 0)"
		RES=-1
		return -1
	fi
}

# ------------------------------------------------------------------------------------------------------

# Check example/pubspec.yaml
#---------------------------
check_example_pubspec()
{
	RES=0
	if [ $FLAVOR == 'FULL' ]; then

		if grep '^ *flutter_sound:$' example/pubspec.yaml > /dev/null ; then
			echo "example flavor is FULL $(tput setaf 2) [OK]$(tput sgr 0)"
			return 0
		fi

		if grep '^ *flutter_sound_lite:$' example/pubspec.yaml > /dev/null ; then
			echo "example flavor is LITE $(tput setaf 1) [NOK]$(tput sgr 0)"
			RES=-1
			return -1
		fi

		echo "Cannot determine the example flavor. $(tput setaf 1) [NOK]$(tput sgr 0)"
		return -1

	elif [ $FLAVOR == 'LITE' ]; then
		if grep '^ *flutter_sound:$' example/pubspec.yaml > /dev/null ; then
			echo "example flavor is FULL $(tput setaf 1) [NOK]$(tput sgr 0)"
			RES=-1
			return -1
		fi

		if grep '^ *flutter_sound_lite:$' example/pubspec.yaml > /dev/null ; then
			echo "example flavor is LITE $(tput setaf 2) [OK]$(tput sgr 0)"
			return 0
		fi

		echo "Cannot determine the example flavor. $(tput setaf 1) [NOK]$(tput sgr 0)"
		RES=-1
		return -1

	else

		if grep '^ *flutter_sound:$' example/pubspec.yaml > /dev/null ; then
			echo "example flavor is FULL $(tput setaf 2) [OK]$(tput sgr 0)"
			RES=-1
			return -1
		fi

		if grep '^ *flutter_sound_lite:$' example/pubspec.yaml > /dev/null ; then
			echo "example flavor is LITE $(tput setaf 2) [OK]$(tput sgr 0)"
			RES=-1
			return -1
		fi

		echo "Cannot determine the example flavor. $(tput setaf 1) [NOK]$(tput sgr 0)"
		RES=-1
		return -1
	fi
}

# ------------------------------------------------------------------------------------------------------

# Check ios/flutter_sound.podspec
# -------------------------------
check_flutter_sound_podspec()
{
	RES=0
        if [ $FLAVOR == 'FULL' ]; then

        	if [ -f ios/flutter_sound_lite.podspec ]; then
        		echo "ios/flutter_sound.podspec_lite exists $(tput setaf 1) [NOK]$(tput sgr 0)"
        		RES=-1
        		return -1
        	fi

        	if [ ! -f ios/flutter_sound.podspec ]; then
        		RES=-1
        		echo "ios/flutter_sound.podspec does not exists $(tput setaf 1) [NOK]$(tput sgr 0)"
        		return -1
        	fi

        	echo "ios/flutter_sound.podspec exists $(tput setaf 2) [OK]$(tput sgr 0)"


		if grep "^ *s.name *=* \'flutter_sound_lite\'$" ios/flutter_sound.podspec > /dev/null ; then
			echo "ios/flutter_sound.podspec is LITE $(tput setaf 1) [NOK]$(tput sgr 0)"
			RES=-1
			return -1
		elif grep "^ *s.name *=* \'flutter_sound\'$" ios/flutter_sound.podspec > /dev/null ; then
			echo "ios/flutter_sound.podspec is FULL $(tput setaf 2) [OK]$(tput sgr 0)"
		else
			echo "Cannot determine flavor in ios/flutter_sound.podspec $(tput setaf 1) [NOK]$(tput sgr 0)"
			RES=-1
			return -1
		fi

		if grep "^ *s.dependency *\'mobile-ffmpeg-audio\', *=* \'4.3.2\'$" ios/flutter_sound.podspec > /dev/null ; then
			echo "dependency in ios/flutter_sound.podspec is set: $(tput setaf 2) [OK]$(tput sgr 0)"
		else
			echo "dependency in ios/flutter_sound.podspec is not set: $(tput setaf 1) [NOK]$(tput sgr 0)"
			RES=-1
			exit -1
		fi

	elif [ $FLAVOR == 'LITE' ]; then
       		if [ -f ios/flutter_sound.podspec ]; then
        		echo "ios/flutter_sound.podspec exists $(tput setaf 1) [NOK]$(tput sgr 0)"
        		RES=-1
        		return -1
        	fi

        	if [ ! -f ios/flutter_sound_lite.podspec ]; then
        		echo "ios/flutter_sound_lite.podspec does not exists $(tput setaf 1) [NOK]$(tput sgr 0)"
        		RES=-1
        		return -1
        	fi
      		echo "ios/flutter_sound.podspec_lite exists $(tput setaf 2) [OK]$(tput sgr 0)"


		if grep "^ *s.name *=* \'flutter_sound\'$" ios/flutter_sound_lite.podspec > /dev/null ; then
			echo "ios/flutter_sound.podspec is FULL $(tput setaf 1) [NOK]$(tput sgr 0)"
			RES=-1
			return -1
		elif grep "^ *s.name *=* \'flutter_sound_lite\'$" ios/flutter_sound_lite.podspec > /dev/null ; then
			echo "ios/flutter_sound.podspec is LITE $(tput setaf 2) [OK]$(tput sgr 0)"
		else
			echo "Cannot determine flavor in ios/flutter_sound.podspec $(tput setaf 1) [NOK]$(tput sgr 0)"
			RES=-1
			return -1
		fi

		if grep "^ *s.dependency *\'mobile-ffmpeg-audio\', *=* \'4.3.2\'$" ios/flutter_sound_lite.podspec > /dev/null ; then
			echo "dependency in ios/flutter_sound.podspec : $(tput setaf 1) [NOK]$(tput sgr 0)"
		else
			echo "dependency in ios/flutter_sound.podspec : $(tput setaf 2) [OK]$(tput sgr 0)"
		fi
	else
		if grep "^ *s.name *=* \'flutter_sound\'$" ios/flutter_sound.podspec > /dev/null ; then
			echo "ios/flutter_sound.podspec is FULL $(tput setaf 2) [OK]$(tput sgr 0)"
			RES=-1
			return -1
		elif grep "^ *s.name *=* \'flutter_sound_lite\'$" ios/flutter_sound.podspec > /dev/null ; then
			echo "ios/flutter_sound.podspec is LITE $(tput setaf 2) [OK]$(tput sgr 0)"
			RES=-1
			return -1
		else
			echo "Cannot determine flavor in ios/flutter_sound.podspec $(tput setaf 1) [NOK]$(tput sgr 0)"
			RES=-1
			return -1
		fi

		if grep "^ *s.dependency *\'mobile-ffmpeg-audio\', *=* \'4.3.2\'$" ios/flutter_sound.podspec > /dev/null ; then
			RES=-1
			echo "dependency in ios/flutter_sound.podspec is set : $(tput setaf 1) [NOK]$(tput sgr 0)"
			exit -1
		else
			echo "dependency in ios/flutter_sound.podspec is not set : $(tput setaf 2) [OK]$(tput sgr 0)"
		fi
	fi



	return 0
}

# ------------------------------------------------------------------------------------------------------

# Check ios FlutterFFmpegPlugin
# -----------------------------
check_ios_flavor()
{
	RES=0
       	if [ $FLAVOR == 'FULL' ]; then
       		if grep "^ *#define *FULL_FLAVOR$" ios/Classes/FlutterFFmpegPlugin.h > /dev/null; then
       			echo "ios/Classes/FlutterFFmpegPlugin.h is FULL $(tput setaf 2) [OK]$(tput sgr 0)"
      		elif grep "^ *#define *LITE_FLAVOR$" ios/Classes/FlutterFFmpegPlugin.h > /dev/null; then
       			echo "ios/Classes/FlutterFFmpegPlugin.h is LITE $(tput setaf 1) [NOK]$(tput sgr 0)"
       			RES=-1
       		else
       			echo "ios/Classes/FlutterFFmpegPlugin.h : cannot determine flavor $(tput setaf 1) [NOK]$(tput sgr 0)"
       			RES=-1
       		fi
	elif [ $FLAVOR == 'LITE' ]; then
		if grep "^ *#define *FULL_FLAVOR$" ios/Classes/FlutterFFmpegPlugin.h > /dev/null; then
       			echo "ios/Classes/FlutterFFmpegPlugin.h is FULL $(tput setaf 1) [NOK]$(tput sgr 0)"
       			RES=-1
      		elif grep "^ *#define *LITE_FLAVOR$" ios/Classes/FlutterFFmpegPlugin.h > /dev/null; then
       			echo "ios/Classes/FlutterFFmpegPlugin.h is LITE $(tput setaf 2) [OK]$(tput sgr 0)"
       		else
       			echo "ios/Classes/FlutterFFmpegPlugin.h : cannot determine flavor $(tput setaf 1) [NOK]$(tput sgr 0)"
       			RES=-1
       		fi

	else
		if grep "^ *#define *FULL_FLAVOR$" ios/Classes/FlutterFFmpegPlugin.h > /dev/null; then
       			echo "ios/Classes/FlutterFFmpegPlugin.h is FULL $(tput setaf 2) [OK]$(tput sgr 0)"
      		elif grep "^ *#define *LITE_FLAVOR$" ios/Classes/FlutterFFmpegPlugin.h > /dev/null; then
       			echo "ios/Classes/FlutterFFmpegPlugin.h is LITE $(tput setaf 2) [OK]$(tput sgr 0)"
       			RES=-1
       		else
       			echo "ios/Classes/FlutterFFmpegPlugin.h : cannot determine flavor $(tput setaf 1) [NOK]$(tput sgr 0)"
       			RES=-1
       		fi

	fi

	return $RES
}

# ------------------------------------------------------------------------------------------------------

# Processing dart files
# ---------------------
check_import()
{
	RES=0
       	if [ $FLAVOR == 'FULL' ]; then
       		if grep "^ *import *'package:flutter_sound_lite/" $1 > /dev/null; then
       			echo "$1 : import LITE $(tput setaf 1) [NOK]$(tput sgr 0)"
       			RES=-1
       			return -1
       		fi
	elif [ $FLAVOR == 'LITE' ]; then
       		if grep "^ *import *'package:flutter_sound/" $1 > /dev/null; then
       			echo "$1 : import FULL $(tput setaf 1) [NOK]$(tput sgr 0)"
       			RES=-1
       			return -1
       		fi
	fi
	return 0
}

process_dart_file()
{
	if [ $2 == 'FULL' ]; then
		gsed -i "s/^ *import *'package:flutter_sound_lite\//import 'package:flutter_sound\//" $1
	else
		gsed -i "s/^ *import *'package:flutter_sound\//import 'package:flutter_sound_lite\//" $1
	fi
}

# ------------------------------------------------------------------------------------------------------

# Check Android FFmpeg
# --------------------
check_android_ffmpeg()
{
	RES=0
       	if [ $FLAVOR == 'FULL' ]; then
       		if [ -d "android/src/main/java/com/dooboolab/ffmpeg" ]; then
      			echo  "android/src/main/java/com/dooboolab/ffmpeg exists : $(tput setaf 2) [OK]$(tput sgr 0)"
      		else
      			echo "android/src/main/java/com/dooboolab/ffmpeg does not exist : $(tput setaf 1) [NOK]$(tput sgr 0)"
      			RES=-1
      		fi

      		if [ -d "android/src/main/ffmpeg.park" ]; then
      			echo "android/src/main/ffmpeg.park exists : $(tput setaf 1) [NOK]$(tput sgr 0)"
      			RES=-1
      		else
      			echo "android/src/main/ffmpeg.park does not exist : $(tput setaf 2) [OK]$(tput sgr 0)"
      		fi


       	elif [ $FLAVOR == 'LITE' ]; then
       		if [ -d "android/src/main/java/com/dooboolab/ffmpeg" ]; then
      			echo "android/src/main/java/com/dooboolab/ffmpeg exists : $(tput setaf 1) [NOK]$(tput sgr 0)"
      			RES=-1
      		else
      			echo "android/src/main/java/com/dooboolab/ffmpeg does not exist : $(tput setaf 2) [OK]$(tput sgr 0)"
      		fi

      		if [ -d "android/src/main/ffmpeg.park" ]; then
      			echo "android/src/main/ffmpeg.park exists : $(tput setaf 2) [OK]$(tput sgr 0)"
      		else
      			echo "android/src/main/ffmpeg.park does not exist : $(tput setaf 1) [NOK]$(tput sgr 0)"
      			RES=-1
      		fi
	else
      		if [ -d "android/src/main/java/com/dooboolab/ffmpeg" ]; then
      			echo "android/src/main/java/com/dooboolab/ffmpeg exists : $(tput setaf 2) [OK]$(tput sgr 0)"
      			RES=-1
      		else
      			echo "android/src/main/java/com/dooboolab/ffmpeg does not exist : $(tput setaf 2) [OK]$(tput sgr 0)"
      		fi

      		if [ -d "android/src/main/ffmpeg.park" ]; then
      			echo "android/src/main/ffmpeg.park exists : $(tput setaf 2) [OK]$(tput sgr 0)"
      		else
      			echo "android/src/main/ffmpeg.park does not exist : $(tput setaf 2) [OK]$(tput sgr 0)"
      			RES=-1
      		fi
	fi

	return $RES

}

# ------------------------------------------------------------------------------------------------------

# Check Android build.gradle
# --------------------------
check_android_build_gradle()
{
	RES=0
      	if [ $FLAVOR == 'FULL' ]; then
       		if grep "^ *ext.flutterFFmpegPackage *= *'audio'$" android/build.gradle  > /dev/null; then
      			echo "android/build.gradle has audio : $(tput setaf 2) [OK]$(tput sgr 0)"
       		else
       			echo "android/build.gradle does not have audio : $(tput setaf 1) [NOK]$(tput sgr 0)"
       			RES=-1
       		fi

       		if grep "^[ $'\t']*implementation *'com.arthenica:mobile-ffmpeg-" android/build.gradle  > /dev/null; then
       			echo "android/build.gradle has FFmpeg dependency : $(tput setaf 2) [OK]$(tput sgr 0)"
       		else
       			echo "android/build.gradle does not have FFmpeg dependency : $(tput setaf 1) [NOK]$(tput sgr 0)"
       			RES=-1
       		fi

      	elif [ $FLAVOR == 'LITE' ]; then
      		if grep "^ *ext.flutterFFmpegPackage *= *'audio'$" android/build.gradle  > /dev/null; then
       			echo "android/build.gradle has audio : $(tput setaf 1) [NOK]$(tput sgr 0)"
       			RES=-1
       		else
       			echo "android/build.gradle does not have audio : $(tput setaf 2) [OK]$(tput sgr 0)"
       		fi

      		if grep "^[ $'\t']*//implementation *'com.arthenica:mobile-ffmpeg-" android/build.gradle  > /dev/null; then
       			echo "android/build.gradle does not have FFmpeg dependency : $(tput setaf 2) [OK]$(tput sgr 0)"
       		else
       			echo "android/build.gradle have FFmpeg dependency : $(tput setaf 1) [NOK]$(tput sgr 0)"
       			RES=-1
       		fi


	else
     		if grep "^ *implementation *'com.arthenica:mobile-ffmpeg-"  android/build.gradle  > /dev/null; then
       			echo "android/build.gradle has audio : $(tput setaf 1) [OK]$(tput sgr 0)"
       			RES=-1
       		else
       			echo "android/build.gradle does not have audio : $(tput setaf 2) [OK]$(tput sgr 0)"
       		fi
	fi
	return $RES
}

# ------------------------------------------------------------------------------------------------------

# Check Android Flauto.java
# -------------------------
check_android_java()
{
	RES=0
      	if [ $FLAVOR == 'FULL' ]; then
       		if grep "^ *import *com.dooboolab.ffmpeg.FlutterFFmpegPlugin;$" android/src/main/java/com/dooboolab/fluttersound/Flauto.java  > /dev/null; then
      			echo "Flauto.java import FFmpeg : $(tput setaf 2) [OK]$(tput sgr 0)"
       		else
       			echo "Flauto.java does notimport FFmpeg : $(tput setaf 1) [NOK]$(tput sgr 0)"
       			RES=-1
       		fi

       		if grep 'public static *final *boolean *FULL_FLAVOR *= *true;$' android/src/main/java/com/dooboolab/fluttersound/Flauto.java  > /dev/null; then
       			echo "Flauto.java FULL_FLAVOR : $(tput setaf 2) [OK]$(tput sgr 0)"
       		else
       			echo "Flauto.java FULL_FLAVOR != true : $(tput setaf 1) [NOK]$(tput sgr 0)"
       			RES=-1
       		fi

      	elif [ $FLAVOR == 'LITE' ]; then
      		if grep "^ *import *com.dooboolab.ffmpeg.FlutterFFmpegPlugin;$" android/src/main/java/com/dooboolab/fluttersound/Flauto.java   > /dev/null; then
       			echo "Flauto.java import FFmpeg : $(tput setaf 1) [NOK]$(tput sgr 0)"
       			RES=-1
       		else
       			echo "Flauto.java does notimport FFmpeg : $(tput setaf 2) [OK]$(tput sgr 0)"
       		fi

       		if grep "public static *final *boolean *FULL_FLAVOR *= *false;$" android/src/main/java/com/dooboolab/fluttersound/Flauto.java  > /dev/null; then
       			echo "Flauto.java LITE_FLAVOR : $(tput setaf 2) [OK]$(tput sgr 0)"
       		else
       			echo "Flauto.java FULL_FLAVOR == true : $(tput setaf 1) [NOK]$(tput sgr 0)"
       			RES=-1
       		fi


	else
       		if grep "^[ $'\t']*FlutterFFmpegPlugin.attachFFmpegPlugin *(ctx, *registrar.messenger ( *) *);$" android/src/main/java/com/dooboolab/fluttersound/Flauto.java  > /dev/null; then
       			echo "Flauto.java initialize FFmpeg : $(tput setaf 2) [OK]$(tput sgr 0)"
       			RES=-1
       		else
       			echo "Flauto.java does not initialize FFmpeg : $(tput setaf 2) [OK]$(tput sgr 0)"
       		fi

       		if grep "^[ $'\t']*public static *final *boolean *FULL_FLAVOR *= *false$" android/src/main/java/com/dooboolab/fluttersound/Flauto.java  > /dev/null; then
       			echo "Flauto.java LITE_FLAVOR : $(tput setaf 2) [OK]$(tput sgr 0)"
       		else
       			echo "Flauto.java FULL_FLAVOR == true : $(tput setaf 1) [NOK]$(tput sgr 0)"
       			RES=-1
       		fi

	fi

	return $RES
}


# ------------------------------------------------------------------------------------------------------

if [ -z $1 ]
then
	# No parameters. Check the actual flavor
	R=0
	check_actual_flavor
	if [ $? != 0 ] ; then
		R=-1
	fi

	check_example_pubspec
	if [ $? != 0 ] ; then
		R=-1
	fi

	check_flutter_sound_podspec
	if [ $? != 0 ] ; then
		R=-1
	fi

	check_ios_flavor
	if [ $? != 0 ] ; then
		R=-1
	fi

	for f in lib/*.dart
	do
		check_import $f
		if [ $? != 0 ] ; then
			R=-1
		fi
	done

  for f in lib/src/*.dart
  do
    check_import $f
    if [ $? != 0 ] ; then
      R=-1
    fi
  done


  for f in lib/src/ui/*.dart
  do
    check_import $f
    if [ $? != 0 ] ; then
      R=-1
    fi
  done


  for f in lib/src/util/*.dart
  do
    check_import $f
    if [ $? != 0 ] ; then
      R=-1
    fi
  done


  for f in example/lib/demo_util/*.dart
  do
    check_import $f
    if [ $? != 0 ] ; then
      R=-1
    fi
  done


	for f in example/lib/*.dart
	do
		check_import $f
		if [ $? != 0 ] ; then
			R=-1
		fi
	done

	check_android_ffmpeg
	if [ $? != 0 ] ; then
		R=-1
	fi

	check_android_build_gradle
	if [ $? != 0 ] ; then
		R=-1
	fi

	check_android_java
	if [ $? != 0 ] ; then
		R=-1
	fi

	echo "$FLAVOR: $R"
	exit $R
fi

# ------------------------------------------------------------------------------------------------------

case $1 in
FULL)
	echo 'Previous flavor'
	echo '---------------'
	bin/flavor
	if [ $? == 0 ] || [ "$2" == 'force' ]; then
		gsed -i  's/^name: flutter_sound_lite$/name: flutter_sound/' pubspec.yaml
		gsed -i  's/^\( *\)flutter_sound_lite:$/\1flutter_sound:/' example/pubspec.yaml
		mv ios/flutter_sound_lite.podspec ios/flutter_sound.podspec 2>/dev/null
		gsed -i  "s/^ *s.name *=* 'flutter_sound_lite'$/s.name = 'flutter_sound'/"  ios/flutter_sound.podspec
		gsed -i  "/s.dependency *'mobile-ffmpeg-audio', *=* '4.3.2'$/d"   ios/flutter_sound.podspec
		gsed -i  "/^end$/i \ \ s.dependency 'mobile-ffmpeg-audio', '4.3.2'" ios/flutter_sound.podspec
		gsed -i  "/^ *#define *[A-Z]*_FLAVOR/d"   ios/Classes/FlutterFFmpegPlugin.h
		gsed -i  "/^ *#ifdef *[A-Z]*_FLAVOR/i #define FULL_FLAVOR" ios/Classes/FlutterFFmpegPlugin.h

		for f in lib/*.dart
		do
			process_dart_file $f FULL
		done

    for f in lib/src/*.dart
    do
      process_dart_file $f FULL
    done

    for f in lib/src/ui/*.dart
    do
      process_dart_file $f FULL
    done

    for f in lib/src/util/*.dart
    do
      process_dart_file $f FULL
    done

		for f in example/lib/*.dart
		do
			process_dart_file $f FULL
		done

    for f in example/lib/demo_util/*.dart
    do
      process_dart_file $f FULL
    done

		mv "android/src/main/ffmpeg.park" "android/src/main/java/com/dooboolab/ffmpeg" 2>/dev/null

		gsed -i  "/ext.flutterFFmpegPackage *= *'audio'$/d"   android/build.gradle
		#gsed -i  "/implementation *'com.arthenica:mobile-ffmpeg-/d"   android/build.gradle
		gsed -i "1iext.flutterFFmpegPackage = 'audio'" android/build.gradle
  		gsed -i "s/^[ \t]*\/\/implementation 'com.arthenica:mobile-ffmpeg-/    implementation 'com.arthenica:mobile-ffmpeg-/" android/build.gradle


  		gsed -i  "/import *com.dooboolab.ffmpeg.FlutterFFmpegPlugin;$/d"  android/src/main/java/com/dooboolab/fluttersound/Flauto.java
		gsed -i "1aimport com.dooboolab.ffmpeg.FlutterFFmpegPlugin;"  android/src/main/java/com/dooboolab/fluttersound/Flauto.java

 		gsed -i  "s/^[ $'\t']*public static *final *boolean *FULL_FLAVOR *= *false;$/    public static final boolean FULL_FLAVOR = true;/"  android/src/main/java/com/dooboolab/fluttersound/Flauto.java
		gsed -i  "s/^[ $'\t']*if *( *FULL_FLAVOR *) *;\/\/\ *{/        if (FULL_FLAVOR) \{/"  android/src/main/java/com/dooboolab/fluttersound/Flauto.java
	else
		exit -1
	fi
	;;

# ------------------------------------------------------------------------------------------------------

LITE)
	echo 'Previous flavor'
	echo '---------------'
	bin/flavor
	if [ $? == 0 ] || [ "$2" == 'force' ]; then
		gsed -i  's/^name: flutter_sound$/name: flutter_sound_lite/' pubspec.yaml
		gsed -i  's/^\( *\)flutter_sound:$/\1flutter_sound_lite:/' example/pubspec.yaml
		mv ios/flutter_sound.podspec ios/flutter_sound_lite.podspec 2>/dev/null
		gsed -i  "s/^ *s.name *=* 'flutter_sound'$/s.name = 'flutter_sound_lite'/"  ios/flutter_sound_lite.podspec
		gsed -i  "/s.dependency *'mobile-ffmpeg-audio', *=* '4.3.2'$/d"   ios/flutter_sound_lite.podspec
		gsed -i  "/^ *#define *[A-Z]*_FLAVOR/d"   ios/Classes/FlutterFFmpegPlugin.h
		gsed -i  "/^ *#ifdef *[A-Z]*_FLAVOR/i #define LITE_FLAVOR" ios/Classes/FlutterFFmpegPlugin.h

    for f in lib/*.dart
    do
      process_dart_file $f LITE
    done

    for f in lib/src/*.dart
    do
      process_dart_file $f LITE
    done

    for f in lib/src/ui/*.dart
    do
      process_dart_file $f LITE
    done

    for f in lib/src/util/*.dart
    do
      process_dart_file $f LITE
    done

    for f in example/lib/*.dart
    do
      process_dart_file $f LITE
    done

    for f in example/lib/demo_util/*.dart
    do
      process_dart_file $f LITE
    done

		mv "android/src/main/java/com/dooboolab/ffmpeg" "android/src/main/ffmpeg.park" 2>/dev/null

		gsed -i  "/ext.flutterFFmpegPackage *= *'audio'$/d"   android/build.gradle
		#gsed -i  "/implementation *'com.arthenica:mobile-ffmpeg-/d"   android/build.gradle
		gsed -i "1i//ext.flutterFFmpegPackage = 'audio'" android/build.gradle
 		gsed -i "s/^[ \t]*implementation 'com.arthenica:mobile-ffmpeg-/    \/\/implementation 'com.arthenica:mobile-ffmpeg-/" android/build.gradle


  		gsed -i  "/import *com.dooboolab.ffmpeg.FlutterFFmpegPlugin;$/d"  android/src/main/java/com/dooboolab/fluttersound/Flauto.java
		gsed -i "1a//import com.dooboolab.ffmpeg.FlutterFFmpegPlugin;"  android/src/main/java/com/dooboolab/fluttersound/Flauto.java

		gsed -i  "s/^[ $'\t']*public static *final *boolean *FULL_FLAVOR *= *true;$/    public static final boolean FULL_FLAVOR = false;/"  android/src/main/java/com/dooboolab/fluttersound/Flauto.java
		gsed -i  "s/^[ $'\t']*if *( *FULL_FLAVOR *) *{/        if (FULL_FLAVOR) ;\/\/\{/"  android/src/main/java/com/dooboolab/fluttersound/Flauto.java

	else
		exit -1
	fi
	;;

# ------------------------------------------------------------------------------------------------------

*)
	echo "Corect syntax is $0 [FULL||LITE]  [force]"
	exit -1
esac

flutter pub get
cd example
#flutter pub get
flutter clean
cd ..
flutter clean
rm -rf example/ios/DerivedData 2>/dev/null
cd example/ios
rm Podfile
#pod install
cd ../..

echo
echo 'New current flavor'
echo '------------------'
bin/flavor
exit $?

